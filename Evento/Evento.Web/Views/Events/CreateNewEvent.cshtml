@model Evento.Web.Models.Events.EventViewModel

@{
    ViewData["Title"] = "CreateNewEvent";
}
    <link rel="stylesheet" href="~/css/Events.css" />

@using (Html.BeginForm("CreateNewEvent", "Events", FormMethod.Post, new { enctype = "multipart/form-data" }))
{


<article class="wrapper">
    @ViewBag.Ok
    <header>
        <h1 class="pageTitle">Title</h1>

        <div class="col-md-12">
            @Html.EditorFor(model => model.Title, new
       {
           htmlAttributes = new
           {
               @class = "form-control"
           }
       })
            @Html.ValidationMessageFor(model => model.Title, "", new
       {
           @class =
 "text-danger"
       })

        </div>


    </header>

    <section>
        <h2 class="pageSubTitle"> Category </h2>
        <div class="form-group">

            <select asp-for="CategoryId" class="form-control" asp-items="ViewBag.CategoryId"></select>
        </div>

    </section>
    <section>
        <h2 class="pageSubTitle"> Location </h2>

        <div class="col-md-12">
            @Html.EditorFor(model => model.Country, new
       {
           htmlAttributes = new
           {
               @class = "form-control",
               @placeholder = "Country"

           }

       })
            @Html.ValidationMessageFor(model => model.Country, "", new
       {
           @class =
    "text-danger"
       })

        </div>
        <div class="col-md-12">
            @Html.EditorFor(model => model.City, new
       {
           htmlAttributes = new
           {
               @class = "form-control",
               @placeholder = "City"

           }

       })
            @Html.ValidationMessageFor(model => model.City, "", new
       {
           @class =
    "text-danger"
       })

        </div>

        <div class="col-md-12">
            @Html.EditorFor(model => model.Street, new
       {
           htmlAttributes = new
           {
               @class = "form-control",
               @placeholder = "Street"

           }

       })
            @Html.ValidationMessageFor(model => model.Street, "", new
       {
           @class =
    "text-danger"
       })

        </div>

        <div class="col-md-12">
            @Html.EditorFor(model => model.Latitute, new
       {
           htmlAttributes = new
           {
               @class = "form-control",
               @placeholder = "Latitute"

           }

       })
            @Html.ValidationMessageFor(model => model.Latitute, "", new
       {
           @class =
    "text-danger"
       })

        </div>

        <div class="col-md-12">
            @Html.EditorFor(model => model.Longtitute, new
       {
           htmlAttributes = new
           {
               @class = "form-control",
               @placeholder = "Longtitute"

           }

       })
            @Html.ValidationMessageFor(model => model.Longtitute, "", new
       {
           @class =
    "text-danger"
       })

        </div>

    </section>
    <section>
        <h2 class="pageSubTitle"> Dates </h2>

        <div class="col-md-12">
            <p>
                @Html.DisplayNameFor(model => model.DateStart):
                @Html.EditorFor(model => model.DateStart, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   @placeholder = "DateStart"

               }

           })
                @Html.ValidationMessageFor(model => model.DateStart, "", new
           {
               @class =
        "text-danger"
           })
            </p>
        </div>
        <div class="col-md-12">
            <p>
                @Html.DisplayNameFor(model => model.DateStart):</p>
                @Html.EditorFor(model => model.DateFinish, new
           {
               htmlAttributes = new
               {
                   @class = "form-control",
                   @placeholder = "DateFinish"

               }

           })
                @Html.ValidationMessageFor(model => model.DateFinish, "", new
           {
               @class =
        "text-danger"
           })

        </div>
    </section>
    <section>
        <h2 class="pageSubTitle"> Description </h2>

        <div class="col-md-12">
            @Html.EditorFor(model => model.Description, new
       {
           htmlAttributes = new
           {
               @class = "form-control",
               @placeholder = "Country"

           }

       })
            @Html.ValidationMessageFor(model => model.Description, "", new
       {
           @class =
    "text-danger"
       })

        </div>
    </section>
    <div align="center" class="mt-1">
        <img src="~/images/users_icons/Путь_к_картинке" class="img" width="100%">
    </div>
    <div align="center">
        <label id="profile-image">
            <small>Upload</small>
            <small>
                <input type="file" name="Image" id="Imageinput" id="fileinp" name="fileinp" hidden onchange="imgprev(this)">
                
                <i class="fa fa-camera" aria-hidden="true"></i>
            </small>
        </label>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</article>


}
<script type="text/javascript">
    function imgprev(input) {
        if (input.files[0]) {
            var uploading = new FileReader();
            var imgType = input.files[0].type;
            if (imgType == "image/png" || imgType == "image/jpeg" || imgType == "image/gif" || imgType == "image/bmp") {
                uploading.onload = function (displayImg) {
                    $(".img").attr("src", displayImg.target.result)
                }
                uploading.readAsDataURL(input.files[0])
            } else {

            }
        }
    }
</script>


@section Scripts {
    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCCHJVhwLR43SEydzQrsFGrs4z8_7b5NZY&callback=initMap">
    </script>
    <script src="~/js/googleMapAPI.js"></script>
}
